Что необходимо доделать:
1. Добавление данных с датчиков в БД. Из-за того, что симуляция датчика передает только параметр температуры, данные просто выводятся в консоль.
Вся логика добавления реализована, необходимо только вызвать соответствующий метод и знать правильные значения ключей параметров, приходящих от датчика.
2. Очистка БД. Варианты это: 
	- Полная очистка при перезагрузке сервера;
	- Очистка данных от датчика, который закрыл подключение;
	- Очистка данных раз в какой-то промежуток времени (например, старше 12 часов).
3. Добавить в датчики какое-то описание, которое будет выводится на клиенте пользователю 	


Клиент:

1. Установить Python 3.9: https://www.python.org/downloads/release/python-3913/
	1.1 Убедитесь, что Python установлен корректно. Для этого введите команды в консоли:
	```
	cmd

	$ python --version
	
	$ pip --version

	```
	1.2 Если в результате не была выведена версия Python и Pip:
	Необходимо добавить путь к Python в системную переменную PATH, чтобы можно было запускать Python из любого места в терминале.

	Для этого выполните следующие шаги:

	-Нажмите правой кнопкой мыши на значке "Этот компьютер" на рабочем столе или в Проводнике и выберите "Свойства".
	-Перейдите в "Дополнительные параметры системы".
	-В появившемся окне нажмите "Переменные среды...".
	-В разделе "Системные переменные" найдите переменную PATH и выберите её, затем нажмите "Изменить...".
	-Нажмите "Создать" и добавьте следующие пути:
		C:\Users\<Пользователь>\AppData\Local\Programs\Python\Python39\
		C:\Users\<Пользователь>\AppData\Local\Programs\Python\Python39\Scripts\
	-Нажмите "OK", чтобы сохранить изменения.

2. Распаковать архив, настроить файл конфигурации '.env' расположенный в <пусть_к_распакованному_архиву>/Client123/App

3. Открыть консоль в <пусть_к_распакованному_архиву>/Client123 

4. Создать виртуальное окружение и установить зависимости:

```
cmd

$ python -m venv env

$ .\env\Scripts\activate

$ pip install -r requirements.txt

```

5. Компиляция exe файла:

```
cmd

$ python install.py

```

6. Программа расположена по пути Client123/dist/main.exe



Сервер: 

1. Установить postrgreSQL: https://www.postgresql.org/download/

2. Установить Python 3.9: https://www.python.org/downloads/release/python-3913/
	2.1 Убедитесь, что Python установлен корректно. Для этого введите команды в консоли:
	```
	cmd

	$ python --version
	
	$ pip --version

	```
	2.2 Если в результате не была выведена версия Python и Pip:
	Необходимо добавить путь к Python в системную переменную PATH, чтобы можно было запускать Python из любого места в терминале.

	Для этого выполните следующие шаги:

	-Нажмите правой кнопкой мыши на значке "Этот компьютер" на рабочем столе или в Проводнике и выберите "Свойства".
	-Перейдите в "Дополнительные параметры системы".
	-В появившемся окне нажмите "Переменные среды...".
	-В разделе "Системные переменные" найдите переменную PATH и выберите её, затем нажмите "Изменить...".
	-Нажмите "Создать" и добавьте следующие пути:
		C:\Users\<Пользователь>\AppData\Local\Programs\Python\Python39\
		C:\Users\<Пользователь>\AppData\Local\Programs\Python\Python39\Scripts\
	-Нажмите "OK", чтобы сохранить изменения.

3. Распаковать архив, настроить файл конфигурации '.env' расположенный в <пусть_к_распакованному_архиву>/ServerMeteo
	3.1 Переменная SQLALCHEMY_DATABASE_URL по умолчанию выглядит так: postgresql+psycopg2://postgres:123456789@localhost:5432/weather
		postgresql+psycopg2 - указывает на использование PostgreSQL с драйвером psycopg2
		postgres - имя пользователя
		123456789 - пароль
		localhost - хост базы данных
		5432 - порт, на котором работает PostgreSQL (по умолчанию)
		weather - имя базы данных

4. Открыть консоль в <пусть_к_распакованному_архиву>/ServerMeteo

5. Создать виртуальное окружение и установить зависимости:

```
cmd

$ python -m venv env

$ .\env\Scripts\activate

$ pip install -r requirements.txt

```
6. Инициализировать таблицу в БД. При этом появится одна фиктивная запись со случайными значениями (подробнее в ServerMeteo/app/migration.py).
```
cmd

$ python migration.py


```
7. Запуск сервера:
```
cmd

$ python main.py


```


